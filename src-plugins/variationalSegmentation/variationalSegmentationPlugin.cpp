// /////////////////////////////////////////////////////////////////
// Generated by medPluginGenerator
// /////////////////////////////////////////////////////////////////

#include "variationalSegmentation.h"
#include "variationalSegmentationPlugin.h"

#include <dtkLog/dtkLog.h>

#include "medToolBoxFactory.h"
#include "varSegToolBox.h"

// /////////////////////////////////////////////////////////////////
// variationalSegmentationPluginPrivate
// /////////////////////////////////////////////////////////////////

class variationalSegmentationPluginPrivate
{
public:
    // Class variables go here.
    static const char *s_Name;
};

const char * variationalSegmentationPluginPrivate::s_Name = "variationalSegmentation";

// /////////////////////////////////////////////////////////////////
// variationalSegmentationPlugin
// /////////////////////////////////////////////////////////////////

variationalSegmentationPlugin::variationalSegmentationPlugin(QObject *parent) : dtkPlugin(parent), d(new variationalSegmentationPluginPrivate)
{
    
}

variationalSegmentationPlugin::~variationalSegmentationPlugin(void)
{
    delete d;
    
    d = NULL;
}

bool variationalSegmentationPlugin::initialize(void)
{
    if(!variationalSegmentation::registered())
        dtkWarn() << "Unable to register variationalSegmentation type";
    
    medToolBoxFactory * factory = medToolBoxFactory::instance();

    if ( ! factory->registerToolBox<mseg::VarSegToolBox>(
        mseg::VarSegToolBox::s_identifier(),
        mseg::VarSegToolBox::s_name(),
        mseg::VarSegToolBox::s_description(),
        QStringList() << "segmentation"))
        dtkWarn() << "Unable to register VarSegToolBox type";

    return true;
}

bool variationalSegmentationPlugin::uninitialize(void)
{
    return true;
}

QString variationalSegmentationPlugin::name(void) const
{
    return "variationalSegmentationPlugin";
}

QString variationalSegmentationPlugin::description(void) const
{
    return tr("Manual Variational Segmentation");
}

QString variationalSegmentationPlugin::version(void) const
{
    return VARIATIONALSEGMENTATIONPLUGIN_VERSION;
}

QString variationalSegmentationPlugin::contact(void) const
{
    return "";
}

QStringList variationalSegmentationPlugin::authors(void) const
{
    QStringList list;
    return list;
}

QStringList variationalSegmentationPlugin::contributors(void) const
{
    QStringList list;
    return list;
}

QString variationalSegmentationPlugin::identifier(void) const
{
    return variationalSegmentationPluginPrivate::s_Name;
}


QStringList variationalSegmentationPlugin::tags(void) const
{
    return QStringList();
}

QStringList variationalSegmentationPlugin::types(void) const
{
    return QStringList() << "variationalSegmentation";
}
QStringList variationalSegmentationPlugin::dependencies(void) const
{
    return QStringList();
}
Q_EXPORT_PLUGIN2(variationalSegmentationPlugin, variationalSegmentationPlugin)
